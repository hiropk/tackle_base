<section class="bg-gray-100">
  <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
    <% if notice %>
      <div class="mb-6">
        <div class="bg-green-50 border-l-4 border-green-400 p-4 rounded-md">
          <div class="flex">
            <div class="ml-3">
              <p class="text-sm text-green-700"><%= notice %></p>
            </div>
          </div>
        </div>
      </div>
    <% end %>

    <% if alert %>
      <div class="mb-6">
        <div class="bg-red-50 border-l-4 border-red-400 p-4 rounded-md">
          <div class="flex">
            <div class="ml-3">
              <p class="text-sm text-red-700"><%= alert %></p>
            </div>
          </div>
        </div>
      </div>
    <% end %>

    <div class="px-4 py-6 sm:px-0">
      <h1 class="text-3xl font-bold text-gray-900 mb-8">メール送信</h1>

      <!-- ユーザー検索フォーム -->
      <div class="bg-white shadow sm:rounded-lg mb-6">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg font-medium text-gray-900 mb-4">ユーザー検索</h3>
          <%= form_with url: admin_mail_path, method: :get, class: "space-y-4", local: true do |f| %>
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-3">
              <div>
                <label class="block text-sm font-medium text-gray-700">居住地</label>
                <div class="mt-1">
                  <%= f.select :residence,
                      Profile.residences.keys.map { |k| [t("activerecord.attributes.profile.residence_values.#{k}"), Profile.residences[k]] }
                            .sort_by { |name, _| name },
                      { include_blank: "選択しない" },
                      {
                        multiple: true,
                        size: 5,
                        selected: params[:residence]&.map(&:to_i),
                        class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-2 border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md shadow-sm"
                      }
                  %>
                </div>
              </div>

              <div>
                <label class="block text-sm font-medium text-gray-700">釣行エリア</label>
                <div class="mt-1">
                  <%= f.select :fishing_area,
                      Profile::FISHING_AREAS.map { |k, v| [t("activerecord.attributes.profile.fishing_areas_values.#{v}"), k] }
                            .sort_by { |name, _| name },
                      { include_blank: "選択しない" },
                      {
                        multiple: true,
                        size: 5,
                        selected: params[:fishing_area]&.map(&:to_i),
                        class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-2 border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md shadow-sm"
                      }
                  %>
                </div>
              </div>

              <div>
                <label class="block text-sm font-medium text-gray-700">興味のある釣り</label>
                <div class="mt-1">
                  <%= f.select :interest_fishing,
                      Profile::INTEREST_FISHING_TYPES.map { |k, v| [t("activerecord.attributes.profile.interest_fishings_values.#{v}"), k] },
                      { include_blank: "選択しない" },
                      {
                        multiple: true,
                        size: 5,
                        selected: params[:interest_fishing]&.map(&:to_i),
                        class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-2 border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md shadow-sm"
                      }
                  %>
                </div>
              </div>
            </div>

            <div class="flex justify-end space-x-4">
              <%= f.submit "検索",
                  class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" %>
              <%= link_to "条件をクリア", admin_mail_path,
                  class: "inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" %>
            </div>
          <% end %>
        </div>
      </div>

      <!-- 検索結果とユーザー選択 -->
      <div class="bg-white shadow sm:rounded-lg mb-6">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg font-medium text-gray-900 mb-4">検索結果</h3>

          <!-- 現在の検索条件 -->
          <div class="mb-4 bg-gray-50 p-4 rounded-lg">
            <h4 class="text-sm font-medium text-gray-700 mb-2">現在の検索条件</h4>
            <div class="space-y-4">
              <!-- 居住地 -->
              <div>
                <h5 class="text-sm font-medium text-gray-500">居住地</h5>
                <div class="mt-1">
                  <% if params[:residence].present? && params[:residence].reject(&:blank?).any? %>
                    <div class="space-y-1">
                      <% params[:residence].reject(&:blank?).each do |residence_code| %>
                        <div class="text-sm text-gray-600">
                          <%= t("activerecord.attributes.profile.residence_values.#{Profile.residences.key(residence_code.to_i)}") %>
                        </div>
                      <% end %>
                    </div>
                  <% else %>
                    <div class="text-sm text-gray-600">指定なし</div>
                  <% end %>
                </div>
              </div>

              <!-- 釣行エリア -->
              <div>
                <h5 class="text-sm font-medium text-gray-500">釣行エリア</h5>
                <div class="mt-1">
                  <% if params[:fishing_area].present? && params[:fishing_area].reject(&:blank?).any? %>
                    <div class="space-y-1">
                      <% params[:fishing_area].reject(&:blank?).each do |area_code| %>
                        <div class="text-sm text-gray-600">
                          <%= t("activerecord.attributes.profile.fishing_areas_values.#{Profile::FISHING_AREAS[area_code.to_i]}") %>
                        </div>
                      <% end %>
                    </div>
                  <% else %>
                    <div class="text-sm text-gray-600">指定なし</div>
                  <% end %>
                </div>
              </div>

              <!-- 興味のある釣り -->
              <div>
                <h5 class="text-sm font-medium text-gray-500">興味のある釣り</h5>
                <div class="mt-1">
                  <% if params[:interest_fishing].present? && params[:interest_fishing].reject(&:blank?).any? %>
                    <div class="space-y-1">
                      <% params[:interest_fishing].reject(&:blank?).each do |fishing_code| %>
                        <div class="text-sm text-gray-600">
                          <%= t("activerecord.attributes.profile.interest_fishings_values.#{Profile::INTEREST_FISHING_TYPES[fishing_code.to_i]}") %>
                        </div>
                      <% end %>
                    </div>
                  <% else %>
                    <div class="text-sm text-gray-600">指定なし</div>
                  <% end %>
                </div>
              </div>

              <!-- 検索結果件数 -->
              <div class="mt-4 text-sm text-gray-600">
                <strong>検索結果：<%= @users.count %>件</strong>
              </div>
            </div>
          </div>

          <div class="overflow-y-auto max-h-60">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    <input type="checkbox" id="select-all-checkbox" 
                           class="focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded"
                           title="すべて選択">
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">メールアドレス</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">氏名</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                <% @users.each do |user| %>
                  <tr>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <input type="checkbox" class="user-checkbox" data-user-id="<%= user.id %>" 
                             data-email="<%= user.email_address %>"
                             data-name="<%= user.profile ? "#{user.profile.last_name} #{user.profile.first_name}" : '' %>"
                             class="focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded">
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= user.email_address %></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      <% if user.profile %>
                        <%= user.profile.last_name %> <%= user.profile.first_name %>
                      <% end %>
                    </td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
      </div>

      <!-- メール送信フォーム -->
      <div class="bg-white shadow sm:rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <div class="mb-6">
            <h3 class="text-lg font-medium text-gray-900">メール作成</h3>
          </div>

          <%= form_with url: admin_mail_path, method: :post, data: { turbo: false, confirm: "選択したユーザーにメールを送信してもよろしいですか？" } do |f| %>
            <div class="space-y-6">
              <div>
                <label class="block text-sm font-medium text-gray-700">送信先</label>
                <div class="mt-2 p-3 bg-gray-50 rounded-md min-h-[60px]">
                  <div id="selected-users" class="space-y-2">
                    <!-- 選択されたユーザーがここに動的に追加されます -->
                  </div>
                </div>
              </div>

              <div>
                <label class="block text-sm font-medium text-gray-700">件名</label>
                <div class="mt-2">
                  <%= f.text_field :subject,
                      class: "shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md",
                      placeholder: "メールの件名を入力してください"
                  %>
                </div>
              </div>

              <div>
                <label class="block text-sm font-medium text-gray-700">本文</label>
                <div class="mt-2">
                  <%= f.text_area :body,
                      rows: 20,
                      class: "shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md resize-y p-2 font-mono",
                      style: "line-height: 1.5; min-height: 400px;",
                      placeholder: "本文を入力してください。\n改行も反映されます。\n\n署名が自動的に追加されます：\n--\n加納寛之\n遊漁船ファミリア船長\nタックルベース開発者\n\nLINE友だち追加：https://lin.ee/xxx\n出船カレンダー：https://familiar-fishing.com/calendar"
                  %>
                </div>
              </div>

              <div class="flex justify-end space-x-4">
                <%= link_to "戻る", admin_path, 
                    class: "inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" %>
                <%= f.submit "送信",
                    class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" %>
              </div>

              <div id="selected-user-ids">
                <!-- 選択されたユーザーIDがここに隠しフィールドとして追加されます -->
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</section>

<%# JavaScriptを修正 %>
<%= javascript_tag do %>
  document.addEventListener('turbo:load', function initializeMailForm() {
    const checkboxes = document.querySelectorAll('.user-checkbox');
    const selectedUsersDiv = document.getElementById('selected-users');
    const selectedUserIdsDiv = document.getElementById('selected-user-ids');
    const selectAllCheckbox = document.getElementById('select-all-checkbox');
    const selectedUsers = new Set(); // 選択済みユーザーを管理するSet

    // 全選択チェックボックスの処理
    function handleSelectAll() {
      checkboxes.forEach(checkbox => {
        if (!selectedUsers.has(checkbox.dataset.userId) && !checkbox.disabled) {
          // チェックボックスの状態を変更
          checkbox.checked = this.checked;
          
          if (this.checked) {
            // 選択されたユーザーを追加
            const userId = checkbox.dataset.userId;
            const email = checkbox.dataset.email;
            const name = checkbox.dataset.name;
            
            selectedUsers.add(userId);
            
            // 選択されたユーザーを表示エリアに追加
            const userDiv = document.createElement('div');
            userDiv.id = `selected-user-${userId}`;
            userDiv.className = 'flex items-center justify-between bg-gray-50 px-3 py-2 rounded';
            userDiv.innerHTML = `
              <span class="text-sm text-gray-700">${email} (${name})</span>
              <button type="button" onclick="removeUser('${userId}')" class="text-red-600 hover:text-red-800 text-sm">
                削除
              </button>
            `;
            selectedUsersDiv.appendChild(userDiv);

            // hidden input を追加
            const hiddenInput = document.createElement('input');
            hiddenInput.type = 'hidden';
            hiddenInput.name = 'user_ids[]';
            hiddenInput.value = userId;
            hiddenInput.id = `hidden-user-${userId}`;
            selectedUserIdsDiv.appendChild(hiddenInput);

            // チェックボックスを無効化
            checkbox.disabled = true;
          }
        }
      });
      
      updateSelectAllCheckboxState();
    }

    // 個別チェックボックスの処理
    function handleIndividualCheck() {
      const userId = this.dataset.userId;
      const email = this.dataset.email;
      const name = this.dataset.name;

      if (this.checked && !selectedUsers.has(userId)) {
        selectedUsers.add(userId);
        // 選択されたユーザーを表示エリアに追加
        const userDiv = document.createElement('div');
        userDiv.id = `selected-user-${userId}`;
        userDiv.className = 'flex items-center justify-between bg-gray-50 px-3 py-2 rounded';
        userDiv.innerHTML = `
          <span class="text-sm text-gray-700">${email} (${name})</span>
          <button type="button" onclick="removeUser('${userId}')" class="text-red-600 hover:text-red-800 text-sm">
            削除
          </button>
        `;
        selectedUsersDiv.appendChild(userDiv);

        // hidden input を追加
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'user_ids[]';
        hiddenInput.value = userId;
        hiddenInput.id = `hidden-user-${userId}`;
        selectedUserIdsDiv.appendChild(hiddenInput);

        // チェックボックスを無効化
        this.disabled = true;
        this.checked = true;
      }

      updateSelectAllCheckboxState();
    }

    // 全選択チェックボックスの状態を更新する関数
    function updateSelectAllCheckboxState() {
      const availableCheckboxes = Array.from(checkboxes).filter(cb => !cb.disabled);
      const allChecked = availableCheckboxes.length > 0 && availableCheckboxes.every(cb => cb.checked);
      const someChecked = availableCheckboxes.some(cb => cb.checked);
      
      selectAllCheckbox.checked = allChecked;
      selectAllCheckbox.indeterminate = someChecked && !allChecked;
    }

    // ユーザーを削除する関数をグローバルスコープに追加
    window.removeUser = function(userId) {
      selectedUsers.delete(userId);
      const userDiv = document.getElementById(`selected-user-${userId}`);
      const hiddenInput = document.getElementById(`hidden-user-${userId}`);
      const checkbox = document.querySelector(`.user-checkbox[data-user-id="${userId}"]`);
      
      if (userDiv) userDiv.remove();
      if (hiddenInput) hiddenInput.remove();
      if (checkbox) {
        checkbox.disabled = false;
        checkbox.checked = false;
      }

      updateSelectAllCheckboxState();
    };

    // イベントリスナーを登録
    selectAllCheckbox.addEventListener('change', handleSelectAll);
    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', handleIndividualCheck);
    });

    // クリーンアップ関数
    function cleanup() {
      selectAllCheckbox.removeEventListener('change', handleSelectAll);
      checkboxes.forEach(checkbox => {
        checkbox.removeEventListener('change', handleIndividualCheck);
      });
      delete window.removeUser;
    }

    // turbo:before-cache イベントでクリーンアップを実行
    document.addEventListener('turbo:before-cache', cleanup, { once: true });
  });
<% end %> 
